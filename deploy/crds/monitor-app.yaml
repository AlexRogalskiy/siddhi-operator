# Change apiVersion v1alpha1 to v1alpha2 since we are changing existing entries
apiVersion: siddhi.io/v1alpha2
kind: SiddhiProcess
metadata: 
  name: nats-app
spec: 

  # apps entry can have siddhi apps as configMaps or direct scripts
  apps: 
    # - configMap: app
    - script: |
        @App:name("MonitorApp")
        @App:description("Description of the plan") 
  
        @source(
            type='http',
            receiver.url='http://0.0.0.0:8080/example',
            basic.auth.enabled='false',
            @map(type='json')
        )
        define stream DevicePowerStream (type string, deviceID string, power int);
        
        @sink(type='log', prefix='LOGGER')
        define stream MonitorDevicesPowerStream(sumPower long);
        @info(name='monitored-filter')
        from DevicePowerStream#window.time(100 min)
        select sum(power) as sumPower
        insert all events into MonitorDevicesPowerStream;
  
  # Replace previous pod spec with container. Now previous env entry also used under this container entry.
  # Container entry can have siddhi runner image and envs.
  container: 
    env: 
      - 
        name: RECEIVER_URL
        value: "http://0.0.0.0:8080/example"
      - 
        name: BASIC_AUTH_ENABLED
        value: "false"
      - 
        name: NATS_URL
        value: "nats://siddhi-nats:4222"
      - 
        name: NATS_DEST
        value: siddhi
      - 
        name: NATS_CLUSTER_ID
        value: siddhi-stan
    image: "buddhiwathsala/siddhi-runner:0.1.1"

  # imagePullSecret have the secret which can be used to download custom siddhi runner private docker images or 
  # download siddhi runner docker image from private registries.
  imagePullSecret: siddhi
  
  # messagingSystem entry can have the configurations related to the messaging system to be used in the failover deployment
  messagingSystem: 
    # config: 
    #   bootstrap.servers: 
    #     - "nats://siddhi-nats:4222"
    #   cluster.id: siddhi-stan
    type: nats
  
  # persistentVolume can have the configurations related to k8s PV. Siddhi operator will use this configurations to create PVC.
  persistentVolume: 
    access.modes: 
      - ReadWriteOnce
    resources: 
      requests: 
        storage: 1Gi
    storageClassName: standard
    volume.mode: Filesystem
  
  # runner entry can have a YAML string which can be used to change the configurations of deployment.yaml file inside the siddhi-runner.
  runner: |
    state.persistence:
      enabled: true
      intervalInMin: 1
      revisionsToKeep: 2
      persistenceStore: io.siddhi.distribution.core.persistence.FileSystemPersistenceStore
      config:
        location: siddhi-app-persistence
